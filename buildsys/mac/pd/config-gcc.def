# where is the PD installation including source code?
# (this should point to the main folder, which has a "src" (PD Vanilla) or "include" (PD extended) subfolder)
ifdef FLEXT_PD_APP
PDPATH=$(FLEXT_PD_APP)/Contents/Resources
else
PDPATH=/Applications/Pd-0.42-5.app/Contents/Resources
endif

# where is the PD executable?
PDBIN=$(PDPATH)/bin/pd

###############################################################

# prefix for flext installation
# headers are in $(FLEXTPREFIX)/include/flext
# libraries are in $(FLEXTPREFIX)/lib
# build system is in $(FLEXTPREFIX)/lib/flext

ifndef FLEXTPREFIX
FLEXTPREFIX=/usr/local
endif

###############################################################

# where should the external be built?
OUTPATH=pd-darwin

# where should the external be installed?
ifdef FLEXT_INSTALL_PATH
INSTPATH=$(FLEXT_INSTALL_PATH)
else
INSTPATH=$(PDPATH)/extra
endif

###############################################################

# STK (synthesis tool kit) support
# http://ccrma.stanford.edu/software/stk

# where to find the STK header files (e.g. stk.h)
#STK_INC=/usr/local/include/stk

# where to find the STK library (normally libstk.a)
# (comment out STK_LIB if you don't use STK)
#STK_LIB=/usr/local/lib/libstk.a

###############################################################

# SndObj support
# http://music.nuim.ie//musictec/SndObj

# where to find the SndObj header files (e.g. sndobj.h)
#SNDOBJ_INC=/usr/local/include/sndobj

# where to find the SndObj library (normally libsndobj.a)
# (comment out SNDOBJ_LIB if you don't use SndObj)
#SNDOBJ_LIB=/usr/local/lib/libsndobj.a

###############################################################

# make flags (e.g. use multiprocessor)
MFLAGS=-j 2

# user defined compiler flags
UFLAGS += -ffast-math -mmacosx-version-min=10.7 -stdlib=libc++ # -march=native

# user defined linker flags
LDFLAGS += -mmacosx-version-min=10.7 -stdlib=libc++

# user defined optimization flags
OFLAGS += -O3 -mtune=native

# user defined debugging flags
DFLAGS +=

# architecture-specific flags (optional)
UFLAGS_ppc += -faltivec
OFLAGS_ppc +=
DFLAGS_ppc +=

UFLAGS_i386 +=
OFLAGS_i386 +=
DFLAGS_i386 +=

UFLAGS_x86_64 +=
OFLAGS_x86_64 += 
DFLAGS_x86_64 +=

# cross-compilation (optional)
ARCH=x86_64 # ppc ppc64

# SDK for 10.6
#OSXSDK=/Developer/SDKs/MacOSX10.6u.sdk
